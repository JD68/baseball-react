- Real App with real baseball history database! 
- Have profressionally built two apps like this but not baseball of course.
- May host app and have link to github code.
- Intially purpose is this is a learning task. 
- Learning EmacScript 6.
- Learning React and then Angular 2 with typescript
- Will do React (this one) first and then in Angular 2 with typescript
- After initial purpose is complete can show to potential employers.
- After initial purpose is complete can move on to testing, services, database, etc... Full stack


- Four components: Input control, divisional team standings, chart summary stats, details view.
- In input control can select the view which effects chart and details. 
- Chart is grouping, click on grouping and see grouping details in details view.
- chart summary and details are affected by team selection
- Each view needs to provide chart view and details view
- intial views available views will be Batting Average and ERA.



- Input control Input control styles and layout
- Changes to app state will reload team standings, 
- data is integrated into client side app. They will be behind Node REST services and in DB SOON!!!!!!

- put this into README.md
- update README.md with start instructions and dependencies
- do batting average and era views
- All services are async so when move data to database and use Node REST services. no one should be effected, except add error handling
- do need spinner and disable all until services return
- Remove unused styles
- change favicon.ico



- add react dev tools if needed
- add more views 
- Router\React router\History\back and forth
- Redux
- Node REST services
- Database
- Testing
- get away from create-react-app, do own process. Can't do node services with it, at least I couldn't configure it correctly.
- do better folder layout once get away from create-react-app